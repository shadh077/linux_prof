# Отладка VAGRANT_LOG=debug vagrant up

Vagrant.configure(2) do |config|
    config.vm.box = "generic/ubuntu2204"
  
    config.vm.provision "ansible" do |ansible|
      #ansible.verbose = "vvv"
      ansible.compatibility_mode = "2.0"
      ansible.playbook = "main.yml"
      ansible.become = "true"
    end
  
    config.vm.provider "virtualbox" do |v|
        v.customize ["modifyvm", :id, "--cpus", "1"]
        v.customize ["modifyvm", :id, "--memory", "1024"]
        v.customize ["modifyvm", :id, "--vram", "16"]
        v.customize ["modifyvm", :id, "--audio", "none"]
        #v.gui = true
    end
  
    config.vm.define "image" do |image|
      image.vm.network "private_network", ip: "192.168.56.200"
      image.vm.hostname = "image"      
    end

    config.vm.define "fe" do |fe|
#      fe.vm.network "public_network", type: "bridged"
      fe.vm.network "private_network", ip: "192.168.56.10"
      fe.vm.hostname = "fe"      
    end
  
    config.vm.define "be01" do |be01|
      be01.vm.network "private_network", ip: "192.168.56.11"
      be01.vm.hostname = "be01"
    #  be01.vm.disk :disk, size: "1GB", name: "data"
    end

    config.vm.define "be02" do |be02|
      be02.vm.network "private_network", ip: "192.168.56.12"
      be02.vm.hostname = "be02"
    #  be02.vm.disk :disk, size: "1GB", name: "data"
    end
    
    config.vm.define "mon" do |mon|
      mon.vm.network "private_network", ip: "192.168.56.13"
      mon.vm.hostname = "mon"
      mon.vm.provider "virtualbox" do |monv|
        monv.memory = 2048
        end
    end
end
  